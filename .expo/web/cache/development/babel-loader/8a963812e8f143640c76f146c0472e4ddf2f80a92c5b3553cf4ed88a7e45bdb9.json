{"ast":null,"code":"import { Platform } from 'expo-modules-core';\nimport { getRecoveryPropsToSave } from './ErroRecoveryStore';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\nif (Platform.OS !== 'web') {\n  const globalHandler = ErrorUtils.getGlobalHandler();\n  // ErrorUtils came from react-native\n  // https://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/Libraries/vendor/core/ErrorUtils.js#L25\n  ErrorUtils.setGlobalHandler(async (error, isFatal) => {\n    if (ExpoErrorRecovery.saveRecoveryProps) {\n      await ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n    }\n    globalHandler(error, isFatal);\n  });\n} else if (Platform.OS === 'web' && Platform.isDOMAvailable) {\n  window.addEventListener('error', () => {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}","map":{"version":3,"names":["Platform","getRecoveryPropsToSave","ExpoErrorRecovery","OS","globalHandler","ErrorUtils","getGlobalHandler","setGlobalHandler","error","isFatal","saveRecoveryProps","isDOMAvailable","window","addEventListener"],"sources":["G:\\DOWNLOADS\\meal-app-main\\node_modules\\expo-error-recovery\\src\\ErrorRecovery.fx.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport { getRecoveryPropsToSave } from './ErroRecoveryStore';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\n\nif (Platform.OS !== 'web') {\n  const globalHandler = ErrorUtils.getGlobalHandler();\n  // ErrorUtils came from react-native\n  // https://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/Libraries/vendor/core/ErrorUtils.js#L25\n  ErrorUtils.setGlobalHandler(async (error, isFatal) => {\n    if (ExpoErrorRecovery.saveRecoveryProps) {\n      await ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n    }\n    globalHandler(error, isFatal);\n  });\n} else if (Platform.OS === 'web' && Platform.isDOMAvailable) {\n  window.addEventListener('error', () => {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,mBAAmB;AAE5C,SAASC,sBAAsB,QAAQ,qBAAqB;AAC5D,OAAOC,iBAAiB,MAAM,qBAAqB;AAEnD,IAAIF,QAAQ,CAACG,EAAE,KAAK,KAAK,EAAE;EACzB,MAAMC,aAAa,GAAGC,UAAU,CAACC,gBAAgB,EAAE;EACnD;EACA;EACAD,UAAU,CAACE,gBAAgB,CAAC,OAAOC,KAAK,EAAEC,OAAO,KAAI;IACnD,IAAIP,iBAAiB,CAACQ,iBAAiB,EAAE;MACvC,MAAMR,iBAAiB,CAACQ,iBAAiB,CAACT,sBAAsB,EAAE,CAAC;;IAErEG,aAAa,CAACI,KAAK,EAAEC,OAAO,CAAC;EAC/B,CAAC,CAAC;CACH,MAAM,IAAIT,QAAQ,CAACG,EAAE,KAAK,KAAK,IAAIH,QAAQ,CAACW,cAAc,EAAE;EAC3DC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAK;IACpCX,iBAAiB,CAACQ,iBAAiB,CAACT,sBAAsB,EAAE,CAAC;EAC/D,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
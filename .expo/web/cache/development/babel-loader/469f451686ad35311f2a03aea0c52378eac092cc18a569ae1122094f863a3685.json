{"ast":null,"code":"import Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction CategoryGridTile(_ref) {\n  var title = _ref.title,\n    color = _ref.color,\n    onPress = _ref.onPress;\n  return _jsx(View, {\n    style: styles.gridItem,\n    children: _jsx(Pressable, {\n      android_ripple: {\n        color: '#ccc'\n      },\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [styles.button, pressed ? styles.buttonPressed : null];\n      },\n      onPress: onPress,\n      children: _jsx(View, {\n        style: [styles.innerContainer, {\n          backgroundColor: color\n        }],\n        children: _jsx(Text, {\n          style: styles.title,\n          children: title\n        })\n      })\n    })\n  });\n}\nexport default CategoryGridTile;\nvar styles = StyleSheet.create({\n  gridItem: {\n    flex: 1,\n    margin: 16,\n    height: 150,\n    borderRadius: 8,\n    elevation: 4,\n    backgroundColor: 'white',\n    shadowColor: 'black',\n    shadowOpacity: 0.25,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    overflow: Platform.OS === 'android' ? 'hidden' : 'visible'\n  },\n  button: {\n    flex: 1\n  },\n  buttonPressed: {\n    opacity: 0.5\n  },\n  innerContainer: {\n    flex: 1,\n    padding: 16,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["CategoryGridTile","_ref","title","color","onPress","_jsx","View","style","styles","gridItem","children","Pressable","android_ripple","_ref2","pressed","button","buttonPressed","innerContainer","backgroundColor","Text","StyleSheet","create","flex","margin","height","borderRadius","elevation","shadowColor","shadowOpacity","shadowOffset","width","shadowRadius","overflow","Platform","OS","opacity","padding","justifyContent","alignItems","fontWeight","fontSize"],"sources":["G:/DOWNLOADS/meal-app-main/components/CategoryGridTile.js"],"sourcesContent":["import { Pressable, View, Text, StyleSheet, Platform } from 'react-native';\n\nfunction CategoryGridTile({ title, color, onPress }) {\n  return (\n    <View style={styles.gridItem}>\n      <Pressable\n        android_ripple={{ color: '#ccc' }}\n        style={({ pressed }) => [\n          styles.button,\n          pressed ? styles.buttonPressed : null,\n        ]}\n        onPress={onPress}\n      >\n        <View style={[styles.innerContainer, { backgroundColor: color }]}>\n          <Text style={styles.title}>{title}</Text>\n        </View>\n      </Pressable>\n    </View>\n  );\n}\n\nexport default CategoryGridTile;\n\nconst styles = StyleSheet.create({\n  gridItem: {\n    flex: 1,\n    margin: 16,\n    height: 150,\n    borderRadius: 8,\n    elevation: 4,\n    backgroundColor: 'white',\n    shadowColor: 'black',\n    shadowOpacity: 0.25,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    overflow: Platform.OS === 'android' ? 'hidden' : 'visible',\n  },\n  button: {\n    flex: 1,\n  },\n  buttonPressed: {\n    opacity: 0.5,\n  },\n  innerContainer: {\n    flex: 1,\n    padding: 16,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 18,\n  },\n});\n"],"mappings":";;;;;;AAEA,SAASA,gBAAgBA,CAAAC,IAAA,EAA4B;EAAA,IAAzBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;EAC/C,OACEC,IAAA,CAACC,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,QAAS;IAAAC,QAAA,EAC3BL,IAAA,CAACM,SAAS;MACRC,cAAc,EAAE;QAAET,KAAK,EAAE;MAAO,CAAE;MAClCI,KAAK,EAAE,SAAAA,MAAAM,KAAA;QAAA,IAAGC,OAAO,GAAAD,KAAA,CAAPC,OAAO;QAAA,OAAO,CACtBN,MAAM,CAACO,MAAM,EACbD,OAAO,GAAGN,MAAM,CAACQ,aAAa,GAAG,IAAI,CACtC;MAAA,CAAC;MACFZ,OAAO,EAAEA,OAAQ;MAAAM,QAAA,EAEjBL,IAAA,CAACC,IAAI;QAACC,KAAK,EAAE,CAACC,MAAM,CAACS,cAAc,EAAE;UAAEC,eAAe,EAAEf;QAAM,CAAC,CAAE;QAAAO,QAAA,EAC/DL,IAAA,CAACc,IAAI;UAACZ,KAAK,EAAEC,MAAM,CAACN,KAAM;UAAAQ,QAAA,EAAER;QAAK,CAAO;MAAC,CACrC;IAAC,CACE;EAAC,CACR,CAAC;AAEX;AAEA,eAAeF,gBAAgB;AAE/B,IAAMQ,MAAM,GAAGY,UAAU,CAACC,MAAM,CAAC;EAC/BZ,QAAQ,EAAE;IACRa,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE,CAAC;IACZR,eAAe,EAAE,OAAO;IACxBS,WAAW,EAAE,OAAO;IACpBC,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEN,MAAM,EAAE;IAAE,CAAC;IACrCO,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAEC,QAAQ,CAACC,EAAE,KAAK,SAAS,GAAG,QAAQ,GAAG;EACnD,CAAC;EACDnB,MAAM,EAAE;IACNO,IAAI,EAAE;EACR,CAAC;EACDN,aAAa,EAAE;IACbmB,OAAO,EAAE;EACX,CAAC;EACDlB,cAAc,EAAE;IACdK,IAAI,EAAE,CAAC;IACPc,OAAO,EAAE,EAAE;IACXX,YAAY,EAAE,CAAC;IACfY,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDpC,KAAK,EAAE;IACLqC,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Provider } from 'react-redux';\nimport CategoriesScreen from \"./screens/CategoriesScreen\";\nimport MealsOverviewScreen from \"./screens/MealsOverviewScreen\";\nimport MealDetailScreen from \"./screens/MealDetailScreen\";\nimport FavoritesScreen from \"./screens/FavoritesScreen\";\nimport { store } from \"./store/redux/store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nfunction DrawerNavigator() {\n  return _jsxs(Drawer.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#351401'\n      },\n      headerTintColor: 'white',\n      sceneContainerStyle: {\n        backgroundColor: '#3f2f25'\n      },\n      drawerContentStyle: {\n        backgroundColor: '#351401'\n      },\n      drawerInactiveTintColor: 'white',\n      drawerActiveTintColor: '#351401',\n      drawerActiveBackgroundColor: '#e4baa1'\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Categories\",\n      component: CategoriesScreen,\n      options: {\n        title: 'All Categories',\n        drawerIcon: function drawerIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(Ionicons, {\n            name: \"list\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Favorites\",\n      component: FavoritesScreen,\n      options: {\n        drawerIcon: function drawerIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(Ionicons, {\n            name: \"star\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    })]\n  });\n}\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(Provider, {\n      store: store,\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          screenOptions: {\n            headerStyle: {\n              backgroundColor: '#351401'\n            },\n            headerTintColor: 'white',\n            contentStyle: {\n              backgroundColor: '#3f2f25'\n            }\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"Drawer\",\n            component: DrawerNavigator,\n            options: {\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"MealsOverview\",\n            component: MealsOverviewScreen\n          }), _jsx(Stack.Screen, {\n            name: \"MealDetail\",\n            component: MealDetailScreen,\n            options: {\n              title: 'About the Meal'\n            }\n          })]\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {}\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Button","NavigationContainer","createNativeStackNavigator","createDrawerNavigator","Ionicons","Provider","CategoriesScreen","MealsOverviewScreen","MealDetailScreen","FavoritesScreen","store","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Drawer","DrawerNavigator","Navigator","screenOptions","headerStyle","backgroundColor","headerTintColor","sceneContainerStyle","drawerContentStyle","drawerInactiveTintColor","drawerActiveTintColor","drawerActiveBackgroundColor","children","Screen","name","component","options","title","drawerIcon","_ref","color","size","_ref2","App","style","contentStyle","headerShown","styles","create","container"],"sources":["G:/DOWNLOADS/meal-app-main/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Button } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Provider } from 'react-redux';\n\nimport CategoriesScreen from './screens/CategoriesScreen';\nimport MealsOverviewScreen from './screens/MealsOverviewScreen';\nimport MealDetailScreen from './screens/MealDetailScreen';\nimport FavoritesScreen from './screens/FavoritesScreen';\n// import FavoritesContextProvider from './store/context/favorites-context';\nimport { store } from './store/redux/store';\n\nconst Stack = createNativeStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nfunction DrawerNavigator() {\n  return (\n    <Drawer.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: '#351401' },\n        headerTintColor: 'white',\n        sceneContainerStyle: { backgroundColor: '#3f2f25' },\n        drawerContentStyle: { backgroundColor: '#351401' },\n        drawerInactiveTintColor: 'white',\n        drawerActiveTintColor: '#351401',\n        drawerActiveBackgroundColor: '#e4baa1',\n      }}\n    >\n      <Drawer.Screen\n        name=\"Categories\"\n        component={CategoriesScreen}\n        options={{\n          title: 'All Categories',\n          drawerIcon: ({ color, size }) => (\n            <Ionicons name=\"list\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Drawer.Screen\n        name=\"Favorites\"\n        component={FavoritesScreen}\n        options={{\n          drawerIcon: ({ color, size }) => (\n            <Ionicons name=\"star\" color={color} size={size} />\n          ),\n        }}\n      />\n    </Drawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <>\n      <StatusBar style=\"light\" />\n      {/* <FavoritesContextProvider> */}\n      <Provider store={store}>\n        <NavigationContainer>\n          <Stack.Navigator\n            screenOptions={{\n              headerStyle: { backgroundColor: '#351401' },\n              headerTintColor: 'white',\n              contentStyle: { backgroundColor: '#3f2f25' },\n            }}\n          >\n            <Stack.Screen\n              name=\"Drawer\"\n              component={DrawerNavigator}\n              options={{\n                headerShown: false,\n              }}\n            />\n            <Stack.Screen\n              name=\"MealsOverview\"\n              component={MealsOverviewScreen}\n            />\n            <Stack.Screen\n              name=\"MealDetail\"\n              component={MealDetailScreen}\n              options={{\n                title: 'About the Meal',\n              }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </Provider>\n      {/* </FavoritesContextProvider> */}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}